server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka



spring:
  application:
    name: gateway-service

  #rabbit
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest


  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring cloud gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
          - id: first-service
#            uri: http://localhost:8081/
            uri: lb://MY-FIRST-SERVICE
            predicates:
              - Path=/first-service/**
            filters:
#              - AddRequestHeader=first-request, first-request-header2 # key,value
#              - AddResponseHeader=first-response, first-response-header2 # key,value
              - CustomFilter
          - id: second-service
#            uri: http://localhost:8082/
            uri: lb://MY-SECOND-SERVICE
            predicates:
              - Path=/second-service/**
            filters:
#              - AddRequestHeader=second-request, second-request-header2 # key,value
#              - AddResponseHeader=second-response, second-response-header2 # key,value
              - CustomFilter
              - name: LoggingFilter # ??
                args:
                  baseMessage: Hi, there
                  preLogger: true
                  postLogger: true
          - id: catalog-service
            uri: lb://CATALOG-SERVICE
            predicates:
              - Path=/catalog-service/**
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/**
          - id: user-service # 로그인
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/login
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 공통 경로 제거 user-service/login > /login으로재작성
          - id: user-service # 회원가입
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/users
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: user-service # 유저 전체
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter
          - id: user-service # Actuator 정보
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/actuator/**
              - Method=GET,POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,busrefresh